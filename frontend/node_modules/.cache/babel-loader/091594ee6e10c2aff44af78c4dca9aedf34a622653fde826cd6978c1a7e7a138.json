{"ast":null,"code":"var _jsxFileName = \"F:\\\\Kiran_Projects\\\\Optimized_Data_Sharding\\\\frontend\\\\src\\\\endpoints\\\\ShardView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { startSharding } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShardView() {\n  _s();\n  const [algorithm, setAlgorithm] = useState('hash');\n  const [filename, setFilename] = useState('');\n  const handleSharding = () => {\n    if (!filename) {\n      alert('Please enter a filename');\n      return;\n    }\n    startSharding(filename, algorithm).then(response => alert(response.data.message)).catch(error => console.error('Sharding failed:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Start Sharding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter uploaded filename\",\n      value: filename,\n      onChange: e => setFilename(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: algorithm,\n      onChange: e => setAlgorithm(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"hash\",\n        children: \"Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"kmeans\",\n        children: \"KMeans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"dbscan\",\n        children: \"DBSCAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSharding,\n      children: \"Start Sharding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ShardView, \"oQiq4fG1YspWfoCQuT4fOPpVyks=\");\n_c = ShardView;\nexport default ShardView;\nvar _c;\n$RefreshReg$(_c, \"ShardView\");","map":{"version":3,"names":["React","useState","startSharding","jsxDEV","_jsxDEV","ShardView","_s","algorithm","setAlgorithm","filename","setFilename","handleSharding","alert","then","response","data","message","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["F:/Kiran_Projects/Optimized_Data_Sharding/frontend/src/endpoints/ShardView.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { startSharding } from '../services/api';\r\n\r\nfunction ShardView() {\r\n  const [algorithm, setAlgorithm] = useState('hash');\r\n  const [filename, setFilename] = useState('');\r\n\r\n  const handleSharding = () => {\r\n    if (!filename) {\r\n      alert('Please enter a filename');\r\n      return;\r\n    }\r\n\r\n    startSharding(filename, algorithm)\r\n      .then((response) => alert(response.data.message))\r\n      .catch((error) => console.error('Sharding failed:', error));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h2>Start Sharding</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter uploaded filename\"\r\n        value={filename}\r\n        onChange={(e) => setFilename(e.target.value)}\r\n      />\r\n      <select value={algorithm} onChange={(e) => setAlgorithm(e.target.value)}>\r\n        <option value=\"hash\">Hash</option>\r\n        <option value=\"kmeans\">KMeans</option>\r\n        <option value=\"dbscan\">DBSCAN</option>\r\n      </select>\r\n      <button onClick={handleSharding}>Start Sharding</button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ShardView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACF,QAAQ,EAAE;MACbG,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IAEAV,aAAa,CAACO,QAAQ,EAAEF,SAAS,CAAC,CAC/BM,IAAI,CAAEC,QAAQ,IAAKF,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAChDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,yBAAyB;MACrCC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFpB,OAAA;MAAQuB,KAAK,EAAEpB,SAAU;MAACqB,QAAQ,EAAGC,CAAC,IAAKrB,YAAY,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAP,QAAA,gBACtEhB,OAAA;QAAQuB,KAAK,EAAC,MAAM;QAAAP,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClCpB,OAAA;QAAQuB,KAAK,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCpB,OAAA;QAAQuB,KAAK,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACTpB,OAAA;MAAQ2B,OAAO,EAAEpB,cAAe;MAAAS,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAAClB,EAAA,CAhCQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAkClB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}