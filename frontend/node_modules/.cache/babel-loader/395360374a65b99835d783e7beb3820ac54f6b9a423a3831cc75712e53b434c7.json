{"ast":null,"code":"var _jsxFileName = \"F:\\\\Kiran_Projects\\\\Optimized_Data_Sharding\\\\frontend\\\\src\\\\endpoints\\\\UploadView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadView() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    uploadFile(formData).then(response => alert(response.data.message)).catch(error => console.error('Upload failed:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadView, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = UploadView;\nexport default UploadView;\nvar _c;\n$RefreshReg$(_c, \"UploadView\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","UploadView","_s","file","setFile","handleUpload","alert","formData","FormData","append","then","response","data","message","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["F:/Kiran_Projects/Optimized_Data_Sharding/frontend/src/endpoints/UploadView.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadFile } from '../services/api';\r\n\r\nfunction UploadView() {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleUpload = () => {\r\n    if (!file) {\r\n      alert('Please select a file.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    uploadFile(formData)\r\n      .then((response) => alert(response.data.message))\r\n      .catch((error) => console.error('Upload failed:', error));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h2>Upload Database</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UploadView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACF,IAAI,EAAE;MACTG,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;IAE7BL,UAAU,CAACS,QAAQ,CAAC,CACjBG,IAAI,CAAEC,QAAQ,IAAKL,KAAK,CAACK,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAChDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC,CAAC;EAC7D,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClErB,OAAA;MAAQ2B,OAAO,EAAEtB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd;AAACnB,EAAA,CAxBQD,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA0BnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}