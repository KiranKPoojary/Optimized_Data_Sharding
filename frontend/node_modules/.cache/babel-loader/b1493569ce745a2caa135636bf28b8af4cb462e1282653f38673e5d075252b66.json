{"ast":null,"code":"let socket = null;\nexport const initWebSocket = onMessage => {\n  socket = new WebSocket('ws://127.0.0.1:5000/ws/sharding_status');\n  socket.onopen = () => console.log('WebSocket Connected');\n  socket.onmessage = event => onMessage(JSON.parse(event.data));\n  socket.onerror = error => console.error('WebSocket Error:', error);\n  socket.onclose = () => console.log('WebSocket Closed');\n};\nexport const closeWebSocket = () => {\n  if (socket) socket.close();\n};","map":{"version":3,"names":["socket","initWebSocket","onMessage","WebSocket","onopen","console","log","onmessage","event","JSON","parse","data","onerror","error","onclose","closeWebSocket","close"],"sources":["F:/Kiran_Projects/Optimized_Data_Sharding/frontend/src/services/websocket.js"],"sourcesContent":["\r\nlet socket = null;\r\n\r\nexport const initWebSocket = (onMessage) => {\r\n  socket = new WebSocket('ws://127.0.0.1:5000/ws/sharding_status');\r\n\r\n  socket.onopen = () => console.log('WebSocket Connected');\r\n  socket.onmessage = (event) => onMessage(JSON.parse(event.data));\r\n  socket.onerror = (error) => console.error('WebSocket Error:', error);\r\n  socket.onclose = () => console.log('WebSocket Closed');\r\n};\r\n\r\nexport const closeWebSocket = () => {\r\n  if (socket) socket.close();\r\n};\r\n"],"mappings":"AACA,IAAIA,MAAM,GAAG,IAAI;AAEjB,OAAO,MAAMC,aAAa,GAAIC,SAAS,IAAK;EAC1CF,MAAM,GAAG,IAAIG,SAAS,CAAC,wCAAwC,CAAC;EAEhEH,MAAM,CAACI,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACxDN,MAAM,CAACO,SAAS,GAAIC,KAAK,IAAKN,SAAS,CAACO,IAAI,CAACC,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC;EAC/DX,MAAM,CAACY,OAAO,GAAIC,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EACpEb,MAAM,CAACc,OAAO,GAAG,MAAMT,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;AACxD,CAAC;AAED,OAAO,MAAMS,cAAc,GAAGA,CAAA,KAAM;EAClC,IAAIf,MAAM,EAAEA,MAAM,CAACgB,KAAK,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}